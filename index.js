const { Client, LocalAuth, Poll } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');

const client = new Client({
    authStrategy: new LocalAuth(),
    puppeteer: {
        args: ['--no-sandbox']
    }
});

// Gerar QR Code para autentica√ß√£o
client.on('qr', (qr) => {
    qrcode.generate(qr, { small: true });
    console.log('QR Code gerado! Escaneie-o com seu WhatsApp.');
});

client.on('ready', () => {
    console.log('Cliente WhatsApp est√° pronto! . . .');
});

// Objeto para armazenar as enquetes enviadas e suas op√ß√µes
const enquetesEnviadas = {};

// Manipulador de mensagens
client.on('message', async msg => {
    const mensagem = msg.body.toLowerCase();
    
    if (mensagem.match(/^(oi|ol√°|ola|bom dia|boa tarde|boa noite|hey|hi|hello)/)) {
        const saudacoes = [
            'Ol√°! Bem-vindo √† nossa barbearia! üëã',
            'Oi! Como posso ajudar voc√™ hoje? üíà',
            'Ol√°! Que bom ter voc√™ por aqui! ‚úÇÔ∏è'
        ];
        
        const saudacaoAleatoria = saudacoes[Math.floor(Math.random() * saudacoes.length)];
        await msg.reply(saudacaoAleatoria);
        
        const opcoes = ['Servi√ßos', 'Hor√°rios dispon√≠veis', 'Falar com barbeiro', 'Localiza√ß√£o'];
        const poll = new Poll('Como posso ajudar voc√™ hoje?', opcoes, {
            allowMultipleAnswers: false
        });

        try {
            const pollMessage = await client.sendMessage(msg.from, poll);
            console.log('Enquete enviada com ID:', pollMessage.id._serialized);
            
            // Armazenar a enquete com suas op√ß√µes
            enquetesEnviadas[pollMessage.id._serialized] = {
                opcoes: opcoes,
                chat: msg.from,
                message: pollMessage
            };
            
            console.log('Enquete armazenada:', {
                id: pollMessage.id._serialized,
                opcoes: opcoes,
                chat: msg.from
            });
        } catch (error) {
            console.error('Erro ao enviar enquete:', error);
        }
    }
});

client.on('vote_update', async (vote) => {
    console.log('Objeto de voto completo:', vote);
    console.log('Voto recebido:', {
        voter: vote.voter,
        selectedOptions: vote.selectedOptions,
        parentMessageId: vote.parentMessage?.id?._serialized
    });

    try {
        const pollId = vote.parentMessage?.id?._serialized;
        
        if (!pollId) {
            console.log('ID da enquete n√£o encontrado no voto');
            return;
        }

        const enquete = enquetesEnviadas[pollId];
        if (!enquete) {
            console.log('Enquete n√£o encontrada nos registros');
            return;
        }

        if (vote.selectedOptions && vote.selectedOptions.length > 0) {
            const opcaoSelecionada = vote.selectedOptions[0].name;
            console.log('Op√ß√£o selecionada:', opcaoSelecionada);

            switch (opcaoSelecionada) {
                case 'Servi√ßos':
                    await client.sendMessage(enquete.chat, 'Servi√ßos dispon√≠veis:\n- Corte de cabelo: R$35,00\n- Barba R$20,00\n- Cabelo e barba: R$50,00\n- Pezinho e sobrancelha: R$10,00\n- combo: R$70,00');
                    break;
                case 'Hor√°rios dispon√≠veis':
                    await client.sendMessage(enquete.chat, 'Hor√°rios dispon√≠veis para hoje:\n09:00\n10:00\n11:00\n14:00\n15:00\n16:00\n\nQual hor√°rio voc√™ prefere?');
                    break;
                case 'Falar com barbeiro':
                    await client.sendMessage(enquete.chat, 'Voc√™ ser√° redirecionado para um de nossos barbeiros em breve. Por favor, aguarde...');
                    break;
                case 'Localiza√ß√£o':
                    await client.sendMessage(enquete.chat, 'Nossa barbearia est√° localizada na Rua Exemplo, 123 - Centro\nCidade - Estado\nCEP: 12345-678\n\nHor√°rio de funcionamento:\nSegunda a S√°bado: 09:00 √†s 19:00');
                    break;
                default:
                    await client.sendMessage(enquete.chat, 'Desculpe, n√£o entendi sua escolha. Por favor, selecione uma das op√ß√µes dispon√≠veis.');
            }
        } else {
            console.log('Nenhuma op√ß√£o selecionada no voto');
        }
    } catch (error) {
        console.error('Erro ao processar voto:', error);
    }
});

// Iniciar o cliente
client.initialize();